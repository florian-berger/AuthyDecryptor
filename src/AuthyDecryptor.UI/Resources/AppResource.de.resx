<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
		Microsoft ResX Schema

		Version 1.3

		The primary goals of this format is to allow a simple XML format 
		that is mostly human readable. The generation and parsing of the 
		various data types are done through the TypeConverter classes 
		associated with the data types.

		Example:

		... ado.net/XML headers & schema ...
		<resheader name="resmimetype">text/microsoft-resx</resheader>
		<resheader name="version">1.3</resheader>
		<resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
		<resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
		<data name="Name1">this is my long string</data>
		<data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
		<data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
			[base64 mime encoded serialized .NET Framework object]
		</data>
		<data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
			[base64 mime encoded string representing a byte array form of the .NET Framework object]
		</data>

		There are any number of "resheader" rows that contain simple 
		name/value pairs.

		Each data row contains a name, and value. The row also contains a 
		type or mimetype. Type corresponds to a .NET class that support 
		text/value conversion through the TypeConverter architecture. 
		Classes that don't support this are serialized and stored with the 
		mimetype set.

		The mimetype is used for serialized objects, and tells the 
		ResXResourceReader how to depersist the object. This is currently not 
		extensible. For a given mimetype the value must be set accordingly:

		Note - application/x-microsoft.net.object.binary.base64 is the format 
		that the ResXResourceWriter will generate, however the reader can 
		read any of the formats listed below.

		mimetype: application/x-microsoft.net.object.binary.base64
		value   : The object must be serialized with 
			: System.Serialization.Formatters.Binary.BinaryFormatter
			: and then encoded with base64 encoding.

		mimetype: application/x-microsoft.net.object.soap.base64
		value   : The object must be serialized with 
			: System.Runtime.Serialization.Formatters.Soap.SoapFormatter
			: and then encoded with base64 encoding.

		mimetype: application/x-microsoft.net.object.bytearray.base64
		value   : The object must be serialized into a byte array 
			: using a System.ComponentModel.TypeConverter
			: and then encoded with base64 encoding.
	-->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>1.3</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.3500.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.3500.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="Home" xml:space="preserve">
    <value>HOME</value>
  </data>
  <data name="Analyze" xml:space="preserve">
    <value>Analyse</value>
  </data>
  <data name="Start" xml:space="preserve">
    <value>Start</value>
  </data>
  <data name="AutoSave" xml:space="preserve">
    <value>Automatisch in Datei speichern</value>
  </data>
  <data name="LoadDecrypted" xml:space="preserve">
    <value>Entschlüsselte Datei laden</value>
  </data>
  <data name="ThirdPartyLicenses" xml:space="preserve">
    <value>Drittanbieterlizenzen</value>
  </data>
  <data name="OpenRepository" xml:space="preserve">
    <value>Repository öffnen</value>
  </data>
  <data name="EncryptedFile" xml:space="preserve">
    <value>Verschlüsselte Datei</value>
  </data>
  <data name="SaveToFile" xml:space="preserve">
    <value>In Datei speichern</value>
  </data>
  <data name="AuthyPassword" xml:space="preserve">
    <value>Authy Backup-Passwort</value>
  </data>
  <data name="Decrypted" xml:space="preserve">
    <value>entschlüsselt</value>
  </data>
  <data name="InputFileTitle" xml:space="preserve">
    <value>Verschlüsselte Datei auswählen</value>
  </data>
  <data name="OutputFileTitle" xml:space="preserve">
    <value>Ausgabe-Datei angeben</value>
  </data>
  <data name="JsonFile" xml:space="preserve">
    <value>JSON-Datei</value>
  </data>
  <data name="AllFiles" xml:space="preserve">
    <value>Alle Dateien</value>
  </data>
  <data name="SelectDecryptedFile" xml:space="preserve">
    <value>Entschlüsselte Datei auswählen</value>
  </data>
  <data name="ErrorLoadDecryptedFile" xml:space="preserve">
    <value>Fehler beim Laden der entschlüsselten Datei: {0}</value>
  </data>
  <data name="Error" xml:space="preserve">
    <value>Fehler</value>
  </data>
  <data name="Actions" xml:space="preserve">
    <value>Aktionen</value>
  </data>
  <data name="SaveIndented" xml:space="preserve">
    <value>Mit Einrückungen speichern</value>
  </data>
  <data name="Settings" xml:space="preserve">
    <value>Einstellungen</value>
  </data>
  <data name="AllowEdit" xml:space="preserve">
    <value>Bearbeitungen erlauben</value>
  </data>
  <data name="NoTokenSelectedTitle" xml:space="preserve">
    <value>Kein Token ausgewählt</value>
  </data>
  <data name="NoTokenSelectedDescription" xml:space="preserve">
    <value>Wähle ein Token aus der Liste links aus. Dort kann ebenfalls ein QR-Code generiert werden, um die Einrichtung in einer neuen Authenticator-App einfach zu ermöglichen.</value>
  </data>
  <data name="TokenDigits" xml:space="preserve">
    <value>Anzahl der Ziffern</value>
  </data>
  <data name="TokenName" xml:space="preserve">
    <value>Name</value>
  </data>
  <data name="TokenIssuer" xml:space="preserve">
    <value>Aussteller</value>
  </data>
  <data name="TokenSecret" xml:space="preserve">
    <value>Secret</value>
  </data>
  <data name="DecryptedTokens" xml:space="preserve">
    <value>Entschlüsselte Tokens</value>
  </data>
  <data name="ErrorOpeningLicensesFile" xml:space="preserve">
    <value>Fehler beim Öffnen der Datei mit den Drittanbieterlizenzen.</value>
  </data>
  <data name="NewVersionAvailable" xml:space="preserve">
    <value>Eine neue Version ({0}) ist verfügbar. Möchten Sie diese herunterladen?</value>
  </data>
  <data name="NewVersionTitle" xml:space="preserve">
    <value>Neue Version verfügbar</value>
  </data>
  <data name="Ok" xml:space="preserve">
    <value>OK</value>
  </data>
  <data name="Cancel" xml:space="preserve">
    <value>Abbrechen</value>
  </data>
  <data name="Yes" xml:space="preserve">
    <value>Ja</value>
  </data>
  <data name="No" xml:space="preserve">
    <value>Nein</value>
  </data>
</root>